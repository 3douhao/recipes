{"id":"components/recipe-list/recipe-list.html","dependencies":[{"name":"/Users/ljoliat/Documents/sites/recipes/package.json","includedInParent":true,"mtime":1543849345743}],"generated":{"html":"<div data-role=\"container\">\n  <p class=\"panel-heading\">Recipes</p>\n  <div class=\"panel-block\">\n    <p class=\"control has-icons-left\">\n      <input class=\"input is-small\" type=\"text\" placeholder=\"search\">\n      <span class=\"icon is-small is-left\">\n        <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\n      </span>\n    </p>\n  </div>\n  <p class=\"panel-tabs\"><a class=\"is-active\">all</a> <a>favorites</a></p>\n  <slot name=\"recipes\">No Recipes Found.</slot>\n</div>\n<script>\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar doc = (document._currentScript || document.currentScript).ownerDocument,\n    template = doc.querySelector(\"templatee\");\n\nvar RecipeList =\n/*#__PURE__*/\nfunction (_HTMLElement) {\n  _inherits(RecipeList, _HTMLElement);\n\n  function RecipeList() {\n    _classCallCheck(this, RecipeList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RecipeList).call(this)); // this.attachShadow({\n    //   mode: \"open\"\n    // }).innerHTML = template;\n  }\n\n  _createClass(RecipeList, [{\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      var temp = document.importNode(template.content, true);\n      this.appendChild(temp);\n    }\n  }]);\n\n  return RecipeList;\n}(_wrapNativeSuper(HTMLElement));\n\nexports.default = RecipeList;\ncustomElements.define(\"recipe-list\", RecipeList);</script>\n"},"hash":"c8b8bbc99132a7e19fa1704e22d19fa3","cacheData":{"env":{}}}